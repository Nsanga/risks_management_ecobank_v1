name: Déploiement de l'application React

on:
  push:
    branches: [main]

jobs:
  build-et-deploiement:
    runs-on: ubuntu-latest
    environment: production  # Assurez-vous que l'environnement "production" contient bien vos secrets et variables
    env:
      CI: false
      REACT_APP_API_URL: ${{ vars.REACT_APP_API_URL }}

    steps:
      - name: Récupérer le code depuis le dépôt
        uses: actions/checkout@v3

      - name: Configurer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Installer les dépendances
        run: npm install

      - name: Construire l'application
        run: npm run build

      - name: Vérifier le contenu du dossier build
        run: ls -la build

      - name: Préparer le serveur (supprimer l'ancien dossier build)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          cipher: aes128-ctr
          use_insecure_cipher: true
          script: |
            echo "=== Préparation du serveur ==="
            sudo mkdir -p /var/www/frontend/risks_management_ecobank_v1
            sudo rm -rf /var/www/frontend/risks_management_ecobank_v1/build
            sudo mkdir -p /var/www/frontend/risks_management_ecobank_v1/build
            echo "=== Préparation terminée ==="

      - name: Transférer le dossier build sur le serveur
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "build/"
          target: "/var/www/frontend/risks_management_ecobank_v1/build/"

      - name: Redémarrer nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          cipher: aes128-ctr
          use_insecure_cipher: true
          script: |
            echo "=== Redémarrage de nginx ==="
            sudo systemctl restart nginx
            echo "✓ Déploiement réussi !"
