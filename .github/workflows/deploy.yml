name: D√©ploiement de l'application React

on:
  push:
    branches: [main]

jobs:
  build-et-deploiement:
    runs-on: ubuntu-latest
    environment: production
    env:
      CI: false
      REACT_APP_API_URL: ${{ vars.REACT_APP_API_URL }}
    steps:
      - name: R√©cup√©rer le code depuis le d√©p√¥t
        uses: actions/checkout@v3

      - name: Configurer Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Installer les d√©pendances
        run: npm install

      - name: Construire l'application
        run: npm run build

      - name: V√©rifier le contenu du dossier build local (GitHub)
        run: ls -la build

      - name: V√©rifier et cr√©er la structure des dossiers sur le serveur
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          cipher: aes128-ctr
          use_insecure_cipher: true
          script: |
            echo "=== V√©rification de la structure des dossiers ==="
            if [ ! -d "/var/www" ]; then
              sudo mkdir -p /var/www
              echo "R√©pertoire /var/www cr√©√©"
            else
              echo "R√©pertoire /var/www existe d√©j√†"
            fi
            if [ ! -d "/var/www/frontend" ]; then
              sudo mkdir -p /var/www/frontend
              echo "R√©pertoire /var/www/frontend cr√©√©"
            else
              echo "R√©pertoire /var/www/frontend existe d√©j√†"
            fi
            if [ ! -d "/var/www/frontend/risks_management_ecobank_v1" ]; then
              sudo mkdir -p /var/www/frontend/risks_management_ecobank_v1
              echo "R√©pertoire /var/www/frontend/risks_management_ecobank_v1 cr√©√©"
            else
              echo "R√©pertoire /var/www/frontend/risks_management_ecobank_v1 existe d√©j√†"
            fi
            echo "=== Pr√©paration du dossier build ==="
            sudo rm -rf /var/www/frontend/risks_management_ecobank_v1/build
            sudo mkdir -p /var/www/frontend/risks_management_ecobank_v1/build
            echo "Structure des dossiers v√©rifi√©e et dossier build pr√©par√©"

      - name: Transf√©rer le dossier build sur le serveur
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "build/"
          target: "/var/www/frontend/risks_management_ecobank_v1/build/"
          strip_components: 1

      - name: Red√©marrer nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          cipher: aes128-ctr
          use_insecure_cipher: true
          script: |
            echo "=== Red√©marrage de nginx ==="
            sudo systemctl restart nginx
            echo "‚úì D√©ploiement r√©ussi !"

  notification:
    needs: build-et-deploiement
    runs-on: ubuntu-latest
    if: always()
    env:
      # Ces variables doivent √™tre d√©finies dans vos environnements ou Repository Vars/secrets
      # SMTP_USERNAME et SMTP_PASSWORD sont ici r√©cup√©r√©s depuis les secrets,
      # EMAIL_FROM, EMAIL_TO, EMAIL_TO_2 et EMAIL_TO_3 depuis les vars.
      EMAIL_FROM: ${{ vars.EMAIL_FROM }}
    steps:
      - name: Construire la configuration de notification
        id: notification_config
        run: |
          missing=""
          # V√©rification des champs obligatoires
          if [ -z "${{ vars.EMAIL_FROM }}" ]; then
            missing="${missing} EMAIL_FROM"
          fi
          if [ -z "${{ vars.EMAIL_TO }}" ]; then
            missing="${missing} EMAIL_TO"
          fi
          if [ -z "${{ secrets.SMTP_USERNAME }}" ]; then
            missing="${missing} SMTP_USERNAME"
          fi
          if [ -z "${{ secrets.SMTP_PASSWORD }}" ]; then
            missing="${missing} SMTP_PASSWORD"
          fi
          # Construction de la liste des destinataires
          recipients="${{ vars.EMAIL_TO }}"
          if [ -n "${{ vars.EMAIL_TO_2 }}" ]; then
            recipients="$recipients, ${{ vars.EMAIL_TO_2 }}"
          fi
          if [ -n "${{ vars.EMAIL_TO_3 }}" ]; then
            recipients="$recipients, ${{ vars.EMAIL_TO_3 }}"
          fi
          if [ -z "$missing" ]; then
            echo "sendEmail=true" >> $GITHUB_OUTPUT
          else
            echo "sendEmail=false" >> $GITHUB_OUTPUT
            echo "missing=$missing" >> $GITHUB_OUTPUT
          fi
          echo "allEmails=$recipients" >> $GITHUB_OUTPUT
          echo "Liste des destinataires : $recipients"

      - name: Envoyer email de succ√®s
        if: ${{ steps.notification_config.outputs.sendEmail == 'true' && needs.build-et-deploiement.result == 'success' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          subject: "üéâ D√©ploiement Futuriskmanagement r√©ussi !"
          body: "üöÄ Le d√©ploiement de l'application web Futuriskmanagement a √©t√© r√©alis√© avec succ√®s. Tout fonctionne parfaitement ! üëç"
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          to: ${{ steps.notification_config.outputs.allEmails }}
          from: ${{ vars.EMAIL_FROM }}

      - name: Envoyer email d'√©chec
        if: ${{ steps.notification_config.outputs.sendEmail == 'true' && needs.build-et-deploiement.result == 'failure' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          subject: "‚ùå D√©ploiement Futuriskmanagement √©chou√© ‚ùå"
          body: "‚ö†Ô∏è Le d√©ploiement de l'application web Futuriskmanagement a √©chou√©. Veuillez v√©rifier les logs pour plus de d√©tails. üòû"
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          to: ${{ steps.notification_config.outputs.allEmails }}
          from: ${{ vars.EMAIL_FROM }}

      - name: Afficher message d'erreur de configuration SMTP manquante
        if: ${{ steps.notification_config.outputs.sendEmail == 'false' }}
        run: echo "Notification par email non envoy√©e. Champs manquants: ${{ steps.notification_config.outputs.missing }}"
